<Window x:Class="Garlic.Bulb.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Garlic.Bulb"
		xmlns:membrane="clr-namespace:garlic.membrane;assembly=BulbMembrane"
        mc:Ignorable="d"
        Title="MainWindow" Width="1280" Height="720"
		MouseMove="Window_MouseMove">
	<DockPanel>
		<StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
			<Button Content="Load" Command="{Binding LoadSceneCommand}"/>
			<Button Content="Save" Command="{Binding SaveSceneCommand}"/>
			<Button Content="Play" Command="{Binding PlayCommand}" IsEnabled="{Binding IsPlayButtonEnabled}"/>
			<Button Content="Stop" Command="{Binding StopCommand}" IsEnabled="{Binding IsStopButtonEnabled}"/>
		</StackPanel>
		<Grid DockPanel.Dock="Bottom">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="5*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="3*"/>
				<RowDefinition Height="*"/>
			</Grid.RowDefinitions>

			<StackPanel x:Name="SceneView">
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="*"/>
					</Grid.ColumnDefinitions>

					<TextBlock Grid.Column="0" Text="Scene"/>
					<Button Grid.Column="1" Content="Create Entity" Command="{Binding Scene.CreateEntityCommand}"/>
				</Grid>

				<ItemsControl x:Name="EntityList" ItemsSource="{Binding Scene.Entities}">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<!-- TODO: Change to a ListBox and ListBoxItem to handle selected / deselected -->
							<Button Command="{Binding SelectedCommand}">
								<TextBox Text="{Binding Name, Mode=TwoWay}"/>
							</Button>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>
			</StackPanel>

			<!--TODO: Make this user control it's own xaml file-->
			<UserControl x:Name="EditorViewport" Grid.Column="1"
					 Focusable="True" IsTabStop="True"
					 KeyUp="EditorViewport_Key" KeyDown="EditorViewport_Key"
					 MouseDown="EditorViewport_MouseButton" MouseUp="EditorViewport_MouseButton">
				<Image x:Name="RenderArea" Stretch="Fill"/>
			</UserControl>
			<ScrollViewer Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="1" BorderThickness="0" VerticalScrollBarVisibility="Auto">
				<TextBlock x:Name="Log" Text="{Binding Log.LogText}" Background="#FF1F1F1F" Foreground="#FFD8D8D8"/>
			</ScrollViewer>

			<StackPanel x:Name="EntityView" Grid.Column="2" Visibility="{Binding Scene.EntityViewVisibility}">
				<TextBox Text="{Binding Scene.SelectedEntity.Name, Mode=TwoWay}"/>
				<ListBox ItemsSource="{Binding Scene.SelectedEntity.Components}">
					<ListBox.Resources>
						<DataTemplate DataType="{x:Type local:TransformComponentViewModel}">
							<StackPanel>
								<TextBlock Text="{Binding Name}" FontWeight="Bold"/>
								<StackPanel Margin="10,0,0,0">
									<local:Vector3Box Label="Position" LeftFieldText="X" LeftFieldValue="{Binding PositionXValue, Mode=TwoWay}" CenterFieldText="Y" CenterFieldValue="{Binding PositionYValue, Mode=TwoWay}" RightFieldText="Z" RightFieldValue="{Binding PositionZValue, Mode=TwoWay}"/>
									<local:Vector3Box Label="Rotation" LeftFieldText="X" LeftFieldValue="{Binding RotationXValue, Mode=TwoWay}" CenterFieldText="Y" CenterFieldValue="{Binding RotationYValue, Mode=TwoWay}" RightFieldText="Z" RightFieldValue="{Binding RotationZValue, Mode=TwoWay}"/>
									<local:Vector3Box Label="Scale" LeftFieldText="X" LeftFieldValue="{Binding ScaleXValue, Mode=TwoWay}" CenterFieldText="Y" CenterFieldValue="{Binding ScaleYValue, Mode=TwoWay}" RightFieldText="Z" RightFieldValue="{Binding ScaleZValue, Mode=TwoWay}"/>
								</StackPanel>
							</StackPanel>
						</DataTemplate>

						<DataTemplate DataType="{x:Type local:RigidBodyComponentViewModel}">
							<StackPanel>
								<TextBlock Text="{Binding Name}" FontWeight="Bold"/>
								<Grid Grid.Column="0" Margin="3,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="*"/>
										<ColumnDefinition Width="*"/>
									</Grid.ColumnDefinitions>

									<TextBlock Grid.Column="0" Text="Mass"/>
									<TextBox Grid.Column="1" Text="{Binding Mass, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
								</Grid>
							</StackPanel>
						</DataTemplate>

						<DataTemplate DataType="{x:Type local:ComponentViewModel}">
							<TextBlock Text="{Binding Name}" FontWeight="Bold"/>
						</DataTemplate>
					</ListBox.Resources>
				</ListBox>
				<Menu HorizontalAlignment="Center">
					<MenuItem Header="Add Component" ItemsSource="{Binding Scene.ComponentMenuItems}">
						<!--Doing a regular DataTemplate here will cause a MenuItem within a MenuItem. So manually set up the container style ourselves-->
						<MenuItem.ItemContainerStyle>
							<Style TargetType="MenuItem">
								<Setter Property="Header" Value="{Binding ComponentType}"/>
								<Setter Property="Command" Value="{Binding OnSelectedCommand}"/>
							</Style>
						</MenuItem.ItemContainerStyle>
					</MenuItem>
				</Menu>
			</StackPanel>
		</Grid>
	</DockPanel>
</Window>
