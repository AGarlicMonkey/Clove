name: Linux

on: 
  push:
    branches: 
      - master

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

    steps:
    - name: Update
      run: sudo apt-get update
      
    - name: Install x11
      run: sudo apt-get install libx11-dev
        
    - name: Install mesa
      run: sudo apt-get install libgl1-mesa-dev

    - uses: actions/checkout@v2
    
    - name: Checkout submodules
      run: git submodule update --init --recursive

    - name: Download Ninja and CMake
      id: cmake_and_ninja
      shell: cmake -P {0}
      run: |
        set(ninja_version "1.9.0")
        set(cmake_version "3.16.2")

        message(STATUS "Using host CMake version: ${CMAKE_VERSION}")

        set(ninja_suffix "linux.zip")
        set(cmake_suffix "Linux-x86_64.tar.gz")
        set(cmake_dir "cmake-${cmake_version}-Linux-x86_64/bin")

        set(ninja_url "https://github.com/ninja-build/ninja/releases/download/v${ninja_version}/ninja-${ninja_suffix}")
        file(DOWNLOAD "${ninja_url}" ./ninja.zip SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./ninja.zip)

        set(cmake_url "https://github.com/Kitware/CMake/releases/download/v${cmake_version}/cmake-${cmake_version}-${cmake_suffix}")
        file(DOWNLOAD "${cmake_url}" ./cmake.zip SHOW_PROGRESS)
        execute_process(COMMAND ${CMAKE_COMMAND} -E tar xvf ./cmake.zip)

        # Save the path for other steps
        file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/${cmake_dir}" cmake_dir)
        message("::set-output name=cmake_dir::${cmake_dir}")

        execute_process(
          COMMAND chmod +x ninja
          COMMAND chmod +x ${cmake_dir}/cmake
        )
      
    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: cmake -P {0}
      working-directory: ${{runner.workspace}}/build
      run: |
        set(ENV{CC} gcc)
        set(ENV{CXX} g++)

        file(TO_CMAKE_PATH "$ENV{GITHUB_WORKSPACE}/ninja" ninja_program)

        execute_process(
          COMMAND ${{steps.cmake_and_ninja.outputs.cmake_dir}}/cmake
          -G Ninja ../Garlic
          -D CMAKE_BUILD_TYPE=$BUILD_TYPE
          -D CMAKE_MAKE_PROGRAM=${ninja_program}
          RESULT_VARIABLE result
        )
        
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()
        
    - name: Build
      shell: cmake -P {0}
      working-directory: ${{runner.workspace}}/build
      run: |
        set(ENV{NINJA_STATUS} "[%f/%t %o/sec] ")

        execute_process(
          COMMAND ${{steps.cmake_and_ninja.outputs.cmake_dir}}/cmake 
          --build . --config $BUILD_TYPE
          RESULT_VARIABLE result
        )
        
        if (NOT result EQUAL 0)
          message(FATAL_ERROR "Bad exit status")
        endif()
