stages:
  - build
  - test

build:windows:
  stage: build
  only:
    - master
  tags:
    - windows-1809
  before_script:
    - git submodule update --init --recursive
    - docker login -u runner -p ${DV_REGISTRY_PW} registry.gitlab.com/digital-vessel/docker
    - docker pull registry.gitlab.com/digital-vessel/docker/build_environment/windows:1809
  script:
    - docker run --volume ${CI_PROJECT_DIR}:C:\garlic registry.gitlab.com/digital-vessel/docker/build_environment/windows:1809 cmd /s /c "cd garlic && mkdir build && cd build && cmake -DGAR_BUILD_TESTS=ON .. && cmake --build . --target ALL_BUILD --config Release"
  artifacts:
    paths:
      - build/

build:linux:gcc:
  stage: build
  only:
    - master
  image: registry.gitlab.com/digital-vessel/docker/build_environment/linux:20.04
  before_script:
    - git submodule update --init --recursive
  script:
    - mkdir build
    - cd build
    - cmake -DGAR_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/gcc-10 -DCMAKE_CXX_COMPILER=/usr/bin/g++-10 -G "Unix Makefiles" ..
    - cmake --build .
  artifacts:
    paths:
      - build/

build:linux:clang:
  stage: build
  only:
    - master
  image: registry.gitlab.com/digital-vessel/docker/build_environment/linux:20.04
  before_script:
    - git submodule update --init --recursive
  script:
    - mkdir build
    - cd build
    - cmake -DGAR_BUILD_TESTS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=/usr/bin/clang-10 -DCMAKE_CXX_COMPILER=/usr/bin/clang++-10 -G "Unix Makefiles" ..
    - cmake --build .
  artifacts:
    paths:
      - build/

test:windows:
  stage: test
  only:
    - master
  tags:
    - windows-1809
  before_script:
    - docker login -u runner -p ${DV_REGISTRY_PW} registry.gitlab.com/digital-vessel/docker
    - docker pull registry.gitlab.com/digital-vessel/docker/build_environment/windows:1809
  script:
    - docker run --volume ${CI_PROJECT_DIR}:C:\garlic registry.gitlab.com/digital-vessel/docker/build_environment/windows:1809 cmd /s /c "cd garlic/build && ctest -C Release"
  dependencies:
    - build:windows
  needs:
    - build:windows

test:linux:gcc:
  stage: test
  only:
    - master
  image: registry.gitlab.com/digital-vessel/docker/build_environment/linux:20.04
  script:
    - cd build
    - ctest -C Release
  dependencies:
    - build:linux:gcc
  needs:
    - build:linux:gcc

test:linux:clang:
  stage: test
  only:
    - master
  image: registry.gitlab.com/digital-vessel/docker/build_environment/linux:20.04
  script:
    - cd build
    - ctest -C Release
  dependencies:
    - build:linux:clang
  needs:
    - build:linux:clang